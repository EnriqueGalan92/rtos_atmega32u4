;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 18/09/2017
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega32U4
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 640
;*****************************************************/
;
;#include <mega32u4.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
     .EQU __sm_adc_noise_red=0x02 // 26022010_1
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;unsigned int timer0 = 0, timer1 = 0;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_COMPA] void timer0_compa_isr(void)
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001F // Place your code here
; 0000 0020     timer0 = timer0 + 1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0021     if (timer0 > 250)
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0022     {
; 0000 0023         timer0 = 0;
;PCODE: $00000015 VOL: 0
; 0000 0024     }
; 0000 0025 }
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0029 {
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002A // Place your code here
; 0000 002B     timer1 = timer1 + 1;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002C     if (timer1 > 100)
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002D     {
; 0000 002E         timer1 = 0;
;PCODE: $00000022 VOL: 0
; 0000 002F     }
; 0000 0030 }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0035 {
;PCODE: $00000027 VOL: 0
; 0000 0036 // Declare your local variables here
; 0000 0037 
; 0000 0038 // Crystal Oscillator division factor: 1
; 0000 0039 #pragma optsize-
; 0000 003A CLKPR=0x80;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 003B CLKPR=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003C #ifdef _OPTIMIZE_SIZE_
; 0000 003D #pragma optsize+
; 0000 003E #endif
; 0000 003F 
; 0000 0040 // Input/Output Ports initialization
; 0000 0041 // Port B initialization
; 0000 0042 // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0043 // State7=T State6=T State5=T State4=T State3=0 State2=0 State1=0 State0=0
; 0000 0044 PORTB=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0045 DDRB=0x0F;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0046 
; 0000 0047 // Port C initialization
; 0000 0048 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0049 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004A PORTC=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 004B DDRC=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 004C 
; 0000 004D // Port D initialization
; 0000 004E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0050 PORTD=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0051 DDRD=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0052 
; 0000 0053 // Port E initialization
; 0000 0054 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0055 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0056 PORTE=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0057 DDRE=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0058 
; 0000 0059 // Port F initialization
; 0000 005A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 005C PORTF=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 005D DDRF=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 005E 
; 0000 005F // PLL initialization
; 0000 0060 // PLL Enabled: Off
; 0000 0061 PLLCSR=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0062 PLLFRQ=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0063 
; 0000 0064 // Timer/Counter 0 initialization
; 0000 0065 // Clock source: System Clock
; 0000 0066 // Clock value: 31.250 kHz
; 0000 0067 // Mode: CTC top=OCR0A
; 0000 0068 // OC0A output: Disconnected
; 0000 0069 // OC0B output: Disconnected
; 0000 006A TCCR0A=0x02;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 006B TCCR0B=0x04;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 006C TCNT0=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 006D OCR0A=0xFA;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 006E OCR0B=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 006F 
; 0000 0070 // Timer/Counter 1 initialization
; 0000 0071 // Clock source: System Clock
; 0000 0072 // Clock value: 31.250 kHz
; 0000 0073 // Mode: Normal top=0xFFFF
; 0000 0074 // OC1A output: Discon.
; 0000 0075 // OC1B output: Discon.
; 0000 0076 // OC1C output: Discon.
; 0000 0077 // Noise Canceler: Off
; 0000 0078 // Input Capture on Falling Edge
; 0000 0079 // Timer1 Overflow Interrupt: On
; 0000 007A // Input Capture Interrupt: Off
; 0000 007B // Compare A Match Interrupt: Off
; 0000 007C // Compare B Match Interrupt: Off
; 0000 007D // Compare C Match Interrupt: Off
; 0000 007E TCCR1A=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 007F TCCR1B=0x04;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0080 TCNT1H=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0081 TCNT1L=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0082 ICR1H=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0083 ICR1L=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0084 OCR1AH=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0085 OCR1AL=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0086 OCR1BH=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0087 OCR1BL=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0088 OCR1CH=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0089 OCR1CL=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 008A 
; 0000 008B // Timer/Counter 3 initialization
; 0000 008C // Clock source: System Clock
; 0000 008D // Clock value: Timer3 Stopped
; 0000 008E // Mode: Normal top=0xFFFF
; 0000 008F // OC3A output: Discon.
; 0000 0090 // OC3B output: Discon.
; 0000 0091 // OC3C output: Discon.
; 0000 0092 // Noise Canceler: Off
; 0000 0093 // Input Capture on Falling Edge
; 0000 0094 // Timer3 Overflow Interrupt: Off
; 0000 0095 // Input Capture Interrupt: Off
; 0000 0096 // Compare A Match Interrupt: Off
; 0000 0097 // Compare B Match Interrupt: Off
; 0000 0098 // Compare C Match Interrupt: Off
; 0000 0099 TCCR3A=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 009A TCCR3B=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 009B TCNT3H=0x00;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 009C TCNT3L=0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 009D ICR3H=0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 009E ICR3L=0x00;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 009F OCR3AH=0x00;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 00A0 OCR3AL=0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 00A1 OCR3BH=0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00A2 OCR3BL=0x00;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 00A3 OCR3CH=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 00A4 OCR3CL=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 00A5 
; 0000 00A6 // Timer/Counter 4 initialization
; 0000 00A7 // Clock: Timer4 Stopped
; 0000 00A8 // Mode: Normal top=OCR4C
; 0000 00A9 // OC4A output: OC4A=Disc. /OC4A=Disc.
; 0000 00AA // OC4B output: OC4B=Disc. /OC4B=Disc.
; 0000 00AB // OC4D output: OC4D=Disc. /OC4D=Disc.
; 0000 00AC // Fault Protection: Off
; 0000 00AD // Fault Protection Noise Canceler: Off
; 0000 00AE // Fault Protection triggered on Falling Edge
; 0000 00AF // Timer4 Overflow Interrupt: Off
; 0000 00B0 // Compare A Match Interrupt: Off
; 0000 00B1 // Compare B Match Interrupt: Off
; 0000 00B2 // Compare D Match Interrupt: Off
; 0000 00B3 // Fault Protection Interrupt: Off
; 0000 00B4 // Dead Time Prescaler: 1
; 0000 00B5 // Dead Time Rising Edge: 0.000 us
; 0000 00B6 // Dead Time Falling Edge: 0.000 us
; 0000 00B7 
; 0000 00B8 // Set Timer4 synchronous operation
; 0000 00B9 PLLFRQ&=0xcf;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 00BA 
; 0000 00BB TCCR4A=0x00;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00BC TCCR4B=0x00;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00BD TCCR4C=0x00;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 00BE TCCR4D=0x00;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00BF TC4H=0x00;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 00C0 TCNT4=0x00;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00C1 TC4H=0x00;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00C2 OCR4A=0x00;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00C3 TC4H=0x00;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00C4 OCR4B=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00C5 TC4H=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00C6 OCR4C=0x00;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 00C7 TC4H=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00C8 OCR4D=0x00;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00C9 DT4=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 00CA 
; 0000 00CB // External Interrupt(s) initialization
; 0000 00CC // INT0: Off
; 0000 00CD // INT1: Off
; 0000 00CE // INT2: Off
; 0000 00CF // INT3: Off
; 0000 00D0 // INT6: Off
; 0000 00D1 EICRA=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00D2 EICRB=0x00;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 00D3 EIMSK=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00D4 // PCINT0 interrupt: Off
; 0000 00D5 // PCINT1 interrupt: Off
; 0000 00D6 // PCINT2 interrupt: Off
; 0000 00D7 // PCINT3 interrupt: Off
; 0000 00D8 // PCINT4 interrupt: Off
; 0000 00D9 // PCINT5 interrupt: Off
; 0000 00DA // PCINT6 interrupt: Off
; 0000 00DB // PCINT7 interrupt: Off
; 0000 00DC PCMSK0=0x00;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00DD PCICR=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00DE 
; 0000 00DF // Timer/Counter 0 Interrupt(s) initialization
; 0000 00E0 TIMSK0=0x02;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00E1 
; 0000 00E2 // Timer/Counter 1 Interrupt(s) initialization
; 0000 00E3 TIMSK1=0x01;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00E4 
; 0000 00E5 // Timer/Counter 3 Interrupt(s) initialization
; 0000 00E6 TIMSK3=0x00;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00E7 
; 0000 00E8 // Timer/Counter 4 Interrupt(s) initialization
; 0000 00E9 TIMSK4=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00EA 
; 0000 00EB // USART1 initialization
; 0000 00EC // USART1 disabled
; 0000 00ED UCSR1B=0x00;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00EE 
; 0000 00EF // Analog Comparator initialization
; 0000 00F0 // Analog Comparator: Off
; 0000 00F1 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00F2 ACSR=0x80;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00F3 ADCSRB=0x00;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00F4 DIDR1=0x00;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00F5 
; 0000 00F6 // ADC initialization
; 0000 00F7 // ADC disabled
; 0000 00F8 ADCSRA=0x00;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00F9 
; 0000 00FA // SPI initialization
; 0000 00FB // SPI disabled
; 0000 00FC SPCR=0x00;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00FD 
; 0000 00FE // TWI initialization
; 0000 00FF // TWI disabled
; 0000 0100 TWCR=0x00;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0101 
; 0000 0102 // USB Controller initialization
; 0000 0103 // USB Mode: Disabled
; 0000 0104 // USB Pad Regulator: Off
; 0000 0105 // OTG (VBUS) Pad: Off
; 0000 0106 // VBUS Transition interrupt: Off
; 0000 0107 UHWCON=0x00;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0108 USBCON=0x00;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0109 USBINT=0; // Clear the interrupt flag
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 010A 
; 0000 010B // Global enable interrupts
; 0000 010C #asm("sei")
;PCODE: $000000C5 VOL: 0
	sei
;PCODE: $000000C6 VOL: 0
; 0000 010D 
; 0000 010E while (1)
;PCODE: $000000C7 VOL: 0
; 0000 010F       {
; 0000 0110       // Place your code here
; 0000 0111           if (timer0 <= 125)
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0112           {
; 0000 0113             PORTB.0 = 1;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0114           }
; 0000 0115           else if (timer0 > 125)
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0116           {
; 0000 0117             PORTB.0 = 0;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0118           }
; 0000 0119 
; 0000 011A           if (timer1 <= 50)
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 011B           {
; 0000 011C             PORTB.1 = 1;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 011D           }
; 0000 011E           else if (timer1 > 50)
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 011F           {
; 0000 0120             PORTB.1 = 0;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0121           }
; 0000 0122       }
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0123 }
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
